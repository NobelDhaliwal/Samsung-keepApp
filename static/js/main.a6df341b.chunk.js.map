{"version":3,"sources":["Components/Header.jsx","Components/CreateNote.jsx","Components/Note.jsx","Components/Footer.jsx","App.js","index.js"],"names":["Header","className","src","alt","width","height","GKCreateNote","props","useState","expand","setExpand","title","content","note","setNote","inputEvent","event","console","log","target","value","name","preVal","onDoubleClick","type","placeholder","onChange","autoComplete","rows","coloum","onClick","Button","passNote","Note","deleteItem","id","Footer","currYear","Date","getFullYear","App","addItem","setAddItem","onDelete","oldVal","filter","currVal","indx","CreateNote","map","val","index","ReactDOM","render","document","getElementById"],"mappings":"kMAWeA,EAVF,WACb,OACE,sBAAKC,UAAU,SAAf,UACD,qBACAC,IAAI,gGACCC,IAAI,OAAOC,MAAM,KAAKC,OAAO,OAC7B,kD,wCC+ESC,EAlFI,SAACC,GAAS,IAAD,EACDC,oBAAS,GADR,mBACnBC,EADmB,KACZC,EADY,OAOJF,mBAAS,CACzBG,MAAM,GACNC,QAAQ,KATY,mBAOlBC,EAPkB,KAObC,EAPa,KAWlBC,EAAW,SAACC,GACtBC,QAAQC,IAAIF,EAAMG,OAAOC,OACzBH,QAAQC,IAAIF,EAAMG,OAAOE,MAFK,MAGZL,EAAMG,OAAlBE,EAHwB,EAGxBA,KAAKD,EAHmB,EAGnBA,MACXN,GAAQ,SAACQ,GACL,kCACOA,GADP,kBAEKD,EAAMD,QAwBf,OACI,mCACA,qBAAKnB,UAAU,eAAgBsB,cALb,WACdb,GAAU,IAId,SACI,iCACKD,EACD,uBACAe,KAAK,OACLC,YAAY,QACZC,SAAUX,EACVM,KAAK,QACLD,MAAOP,EAAKF,MACZgB,aAAa,QACR,KACL,uBACA,0BACAF,YAAY,eACZJ,KAAK,UACLD,MAAOP,EAAKD,QACZgB,KAAK,GACLC,OAAO,IACPH,SAAUX,EACVe,QA3BO,WACZpB,GAAU,MA6BL,uBACCD,EACD,cAACsB,EAAA,EAAD,CAAQD,QA1CD,WACXvB,EAAMyB,SAASnB,GACbC,EAAQ,CAACH,MAAM,GACfC,QAAQ,MAuCN,SAII,cAAC,IAAD,CAASX,UAAU,gBAEnB,a,iBC5DDgC,EAhBJ,SAAC1B,GAIZ,OACI,sBAAKN,UAAU,OAAf,UACI,6BAAKM,EAAMI,QACX,uBACA,4BAAIJ,EAAMK,UACV,wBAAQX,UAAU,MAAM6B,QARX,WACrBvB,EAAM2B,WAAW3B,EAAM4B,KAOf,SACA,cAAC,IAAD,CAAmBlC,UAAU,qBCDtBmC,EAVF,WACT,IAAMC,GAAS,IAAIC,MAAOC,cAC9B,OACI,mCACA,qDACaF,QCuCFG,EAvCL,WAAK,IAAD,EACchC,mBAAS,IADvB,mBACNiC,EADM,KACEC,EADF,KAWJC,EAAS,SAACR,GACpBO,GAAW,SAACE,GAAD,OACPA,EAAOC,QAAO,SAACC,EAAQC,GACnB,OAAOA,IAAQZ,SAKvB,OACI,qCACA,cAAC,EAAD,IACA,cAACa,EAAD,CAAYhB,SAnBE,SAACnB,GAEnB6B,GAAW,SAACpB,GACZ,MAAM,GAAN,mBAAUA,GAAV,CAAiBT,UAiBhB4B,EAAQQ,KAAI,SAACC,EAAIC,GACd,OACI,cAAC,EAAD,CAEAhB,GAAIgB,EACJxC,MAAOuC,EAAIvC,MACXC,QAASsC,EAAItC,QACbsB,WAAYS,GAJPQ,MAQb,cAAC,EAAD,Q,MCnCAC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.a6df341b.chunk.js","sourcesContent":["import React from \"react\";\r\nconst Header=()=>{\r\nreturn(\r\n  <div className=\"header\">\r\n <img \r\n src=\"https://th.bing.com/th/id/OIP.S19ZjXTE5_CJWtdfUqop5gHaHa?w=164&h=180&c=7&o=5&dpr=1.25&pid=1.7\" \r\n      alt=\"logo\" width=\"70\" height=\"60\"></img>\r\n      <h1>Samsung Keep</h1>\r\n  </div>  \r\n)\r\n};\r\nexport default Header;","import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useState } from \"react\";\r\nconst GKCreateNote=(props)=>{\r\n   const[expand,setExpand]=useState(false);\r\n                                   /*we are passing an object in useState \r\n                                  and properties  have same name of the  input\r\n                                   and text field.now with preVal we can store \r\n                                   value of input and text area in this content and \r\n                                      title property of object in states. */\r\n    const[note,setNote]=useState({\r\n        title:\"\",\r\n        content:\"\",\r\n    });\r\n    const inputEvent=(event)=>{\r\nconsole.log(event.target.value);\r\nconsole.log(event.target.name);\r\nconst{name,value}=event.target;// object destructuring\r\nsetNote((preVal)=>{\r\n    return{\r\n        ...preVal,\r\n        [name]:value,    /*with preVal updated function can \r\n                      also acess useState object*/\r\n    };\r\n})                          /*spread Operator we can acess preValue Data*/\r\n                    /*if name in preVal match with input and textfield name store \r\n                         value from variable value in it */\r\n    };\r\n\r\n    const addEvent=()=>{  //addEvent function define here \r\n        props.passNote(note);        //we want that by clicking button our addNote function get \r\n          setNote({title:\"\",\r\n          content:\"\",});                //get call therefore pass it as props \r\n                                 //with props.passNote(); indirectly we are calling \r\n                                 //addNote function\r\n            };\r\n              //how to know which note to store therefore pass note as argument\r\n                 //jab hum button pe kr rahe hai click toh khud ek function ko call\r\n                 //kr rahe addEvent and therfore passNote attribute pass in addEvent function\r\n    const expandIt=()=>{\r\n       setExpand(true);\r\n    }\r\n    const bcktonormal=()=>{\r\n        setExpand(false);\r\n    };\r\nreturn(\r\n    <>\r\n    <div className=\"main_notediv\"  onDoubleClick={bcktonormal}>\r\n        <form>\r\n            {expand?(\r\n            <input \r\n            type=\"text\"\r\n            placeholder=\"Title\"\r\n            onChange={inputEvent}\r\n            name=\"title\"\r\n            value={note.title}\r\n            autoComplete=\"off\"\r\n            /> ):null}\r\n            <br/>\r\n            <textarea \r\n            placeholder=\"Write a Note\"\r\n            name=\"content\"\r\n            value={note.content}\r\n            rows=\"\"\r\n            coloum=\"1\"\r\n            onChange={inputEvent}\r\n            onClick={expandIt}\r\n           \r\n            />\r\n            <br/>\r\n            {expand?(\r\n            <Button onClick={addEvent} >\r\n                 {/* we want by clicking button what user types we add in empty array\r\n                  but our contents is in google app therefore we have to define function \r\n                  in app component */}\r\n                <AddIcon className=\"plus_sign\"/>\r\n                </Button>\r\n             ) :null}\r\n\r\n</form>\r\n\r\n    </div>\r\n    </>\r\n)\r\n};\r\nexport default GKCreateNote;","import React from \"react\";\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nconst Note=(props)=>{\r\n    const deleteNote=()=>{\r\nprops.deleteItem(props.id)\r\n    };\r\nreturn(\r\n    <div className=\"note\">\r\n        <h1>{props.title}</h1>\r\n        <br/>\r\n        <p>{props.content}</p>\r\n        <button className=\"btn\" onClick={deleteNote}>\r\n        <DeleteOutlineIcon className=\"deleteIcon\"/>\r\n        </button>\r\n\r\n    </div>\r\n)\r\n};\r\nexport default Note;","import React from \"react\";\r\nconst Footer=()=>{\r\n    const currYear=new Date().getFullYear();\r\nreturn(\r\n    <>\r\n    <footer>\r\n    Copyright Â© {currYear}\r\n    </footer>\r\n    </>\r\n)\r\n};\r\nexport default Footer;","import React from \"react\";\nimport Header from \"./Components/Header\";\nimport CreateNote from \"./Components/CreateNote\";\nimport Note from \"./Components/Note\";\nimport Footer from \"./Components/Footer\";\nimport { useState } from \"react\";\nconst App=()=>{\n  const[addItem,setAddItem]=useState([]);\n\n    const addNote=(note)=>{\n// alert(\"clicked\")\nsetAddItem((preVal)=>{\nreturn[...preVal,note];\n});\n// console.log(addItems);//now {title:\"\",content:\"\"} these are in app.js bcoz of preVal\n\n    };\n    const onDelete=(id)=>{\nsetAddItem((oldVal)=>\n    oldVal.filter((currVal,indx)=>{\n        return indx !==id;\n    })\n    );\n};\n\nreturn(\n    <>\n    <Header/>\n    <CreateNote passNote={addNote}/>\n{addItem.map((val,index)=>{\n    return(\n        <Note \n        key={index}\n        id={index}\n        title={val.title}\n        content={val.content}\n        deleteItem={onDelete}\n        />\n    );\n})}\n<Footer/>\n    \n    </>\n);\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./App.css\"\n\nReactDOM.render(<App />,document.getElementById('root')\n);\n\n"],"sourceRoot":""}